name: Build

on:
  push:
    tags: ["v*"]
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SOLUTION: xslt.sln
  NETFX_SOLUTION: xslt-netfx.sln
  BUILD_CONFIGURATION: Release

defaults:
  run: 
    shell: cmd

jobs:
  build:
    runs-on: windows-2019
    steps:
    - name: Dump Environment
      run: |
        echo "Solution        : ${{ env.SOLUTION }}" 
        echo "Solution (netfx): ${{ env.NETFX_SOLUTION }}" 
        echo "Configuration   : ${{ env.BUILD_CONFIGURATION }}"
    - name: Checkout
      uses: actions/checkout@v2
      # Git history is needed by GitVersion
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
      # Java 11 is needed by Sonar analyzer
    - name: Setup Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk
        architecture: x64      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.3
      with:
          versionSpec: '5.x' 
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.3          
    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner      
    - name: Restore
      run: dotnet restore "${{ env.SOLUTION }}" --configfile ./nuget.config
    - name: Begin Sonar Analysis
      run: dotnet sonarscanner begin /key:"addupsolutions_addup-xslt" /name:"addup-xslt" /version:"${{ steps.gitversion.outputs.majorMinorPatch }}" /organization:"addupsolutions-oss" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.verbose=true /d:sonar.host.url=https://sonarcloud.io
    - name: Build Windows .NET 4.7.2
      run: msbuild "${{ env.NETFX_SOLUTION }}" /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:RestorePackages=false /p:OutputPath=./build/win-netfx/
    - name: End Sonar Analysis
      run: dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Windows .NET Core
      run: dotnet build ./xslt/netcore/xslt-netcore.csproj --configuration "${{ env.BUILD_CONFIGURATION }}" -r win-x64 --output ./build/win-x64/ /p:PublishSingleFile=true /p:PublishTrimmed=true
    - name: Build Linux .NET Core
      run: dotnet build ./xslt/netcore/xslt-netcore.csproj --configuration "${{ env.BUILD_CONFIGURATION }}" -r linux-x64 --output ./build/linux-x64/ /p:PublishSingleFile=true /p:PublishTrimmed=true      
    - name: Show Built files
      run: dir build /S
